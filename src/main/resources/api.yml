openapi: 3.0.0
info:
  description: Shopping Cart API
  version: "1.0.0"
  title: Shopping Cart API
  contact:
    email: jorge@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/JORGEPALLOL1/shopping-cart/1.0.0
  - url: 'https://api.tienda.com/v1'
paths:
  /shopping-cart:
    get:
      summary: Buscar carritos de compras
      operationId: getAllShoppingCarts
      description: Devolver todos los carritos de compra
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCartItem'
        '400':
          description: bad input parameter
  /shopping-cart/{userId}/buy:
    post:
      summary: Pagar carrito de compras de usuario
      operationId: buyShoppingCart
      description: Eliminar carrito de compra por id de usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceItem'

  /shopping-cart/{userId}:
    delete:
      summary: Borrar carrito de compras de usuario
      operationId: deleteShoppingCartByUserId
      description: Eliminar carrito de compra por id de usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete shopping cart
        '400':
          description: bad input parameter
    get:
      summary: Buscar carrito de compras de usuario
      operationId: getShoppingCartByUserId
      description: Buscar carrito de compra por id de usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
        '400':
          description: bad input parameter
    post:
      summary: Agregar al carrito de compra
      operationId: saveShoppingCart
      description: Agregar datos al carrito de compras
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCartItemRequest'
        description: Inventory item to add
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartItem'
        '400':
          description: bad input parameter

components:
  schemas:
    ShoppingCartItemRequest:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductRequest'
    ShoppingCartItem:
      type: object
      properties:
        id:
          type: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        subtotal:
          type: number
          example: 10
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    InvoiceItem:
      type: object
      properties:
        id:
          type: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        datetime:
          type: string
          format: date-time
          example: 2024-03-16T15:28:42.183Z
        businessId:
          type: string
          example: B123456
        businessName:
          type: string
          example: tienda s.l.
        subtotal:
          type: number
          example: 10
        total:
          type: number
          example: 10
        totalTax:
          type: number
          example: 10
        taxDescription:
          type: string
          example: IVA
        tax:
          type: number
          example: 0.21
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    ProductRequest:
      properties:
        id:
          type: integer
          format: int64
          example: 1
        quantity:
          type: number
          example: 1
      required:
        - id
        - quantity
    Product:
      properties:
        id:
          type: integer
          format: int64
          example: 1
        quantity:
          type: number
          example: 1
        name:
          type: string
          example: producto 1
        category:
          type: string
          example: category 1
        description:
          type: string
          example: description 1
        galleries:
          type: array
          items:
            type: string
        price:
          type: number
          example: 10
        subtotal:
          type: number
          example: 10